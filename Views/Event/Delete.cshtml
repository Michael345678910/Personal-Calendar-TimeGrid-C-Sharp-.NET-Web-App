@model DotNetCoreCalendar.Models.Event

@{
    // Destructive action confirmation for Event deletion
    ViewData["Title"] = "Delete Event";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var returnUrl = Context.Request.Query["returnUrl"].ToString();

    // Render a concise “When” string
    string whenText;
    if (Model.StartTime.Date == Model.EndTime.Date)
    {
        whenText = $"{Model.StartTime:MMM d, yyyy h:mm tt} – {Model.EndTime:h:mm tt}";
    }
    else
    {
        whenText = $"{Model.StartTime:MMM d, yyyy h:mm tt} – {Model.EndTime:MMM d, yyyy h:mm tt}";
    }
}

<div class="container my-4">
    <div class="card shadow-sm border-danger">
        <div class="card-header d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center gap-2">
                <span class="badge bg-danger">Danger</span>
                <h1 class="h4 mb-0">Delete</h1>
            </div>
            <!-- Close: closes modal if present; else navigate back -->
            <button type="button" class="btn-close" aria-label="Close" data-bs-dismiss="modal" id="pageCloseBtn"></button>
        </div>

        <div class="card-body">
            <div class="alert alert-warning" role="alert">
                <strong>Are you sure?</strong> This action cannot be undone.
            </div>

            <div class="mb-3">
                <div class="text-muted small">Event</div>
                <h2 class="h5 mb-1">@Model.Name</h2>
                @if (!string.IsNullOrWhiteSpace(Model.Description))
                {
                    <p class="mb-0">@Model.Description</p>
                }
            </div>

            <dl class="row mb-0">
                <dt class="col-sm-3">When</dt>
                <dd class="col-sm-9">@whenText</dd>

                <dt class="col-sm-3">Location</dt>
                <dd class="col-sm-9">@((Model.Location != null ? Model.Location.Name : "—"))</dd>
            </dl>
        </div>

        <div class="card-footer d-flex flex-wrap gap-2">
            @* POST to Delete action with anti-forgery; returnUrl preserved for back-nav *@
            <form asp-action="Delete" method="post" class="d-inline" asp-route-returnUrl="@returnUrl">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" />
                <button type="submit" class="btn btn-danger">
                    <i class="fa fa-trash me-1"></i> Delete
                </button>
            </form>

            <a class="btn btn-outline-secondary" asp-action="Index">
                <i class="fa fa-times me-1"></i> Cancel
            </a>
            <a class="btn btn-outline-secondary" href="/MyCalendar">
                <i class="fa fa-calendar me-1"></i> Back to Calendar
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            // Close button: if not in a modal, go back gracefully
            var btn = document.getElementById('pageCloseBtn');
            if (btn) {
                btn.addEventListener('click', function (e) {
                    var inModal = document.querySelector('.modal.show');
                    if (!inModal) {
                        e.preventDefault();
                        var back = new URLSearchParams(window.location.search).get('returnUrl');
                        window.location.href = back || '@Url.Action("Index", "Event")';
                    }
                });
            }
        })();
    </script>
}